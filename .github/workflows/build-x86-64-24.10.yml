name: build-x86-64-immortalwrt-24.10.0

on:
  workflow_dispatch:
    inputs:
      partsize:
        description: '请输入要编译固件大小(单位MB)'
        required: true
        default: '1024'
      include_docker:
        description: '是否编译Docker插件'
        required: true
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - 'no'
      include_others:
        description: '是否编译拓展插件'
        required: true
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - 'no'
      enable_pppoe:
        description: "是否配置PPPoE拨号信息?"
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      pppoe_account:
        description: "宽带账号 (若启用PPPoE)"
        required: false
      pppoe_password:
        description: "宽带密码 (若启用PPPoE)"
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: chmod +x ${{ github.workspace }}/x86-64/build.sh

      - name: Validate PPPoE Inputs
        run: |
          if [[ "${{ github.event.inputs.enable_pppoe }}" == "yes" ]]; then
            if [[ -z "${{ inputs.pppoe_account }}" || -z "${{ inputs.pppoe_password }}" ]]; then
              echo "Error: PPPoE account and password must be provided when PPPoE is enabled!"
              exit 1
            fi
          fi

      - name: Add other packages
        run: |
          mkdir -p "${{ github.workspace }}/packages"
          cd ${{ github.workspace }}/packages
          if [[ "${{ github.event.inputs.include_others }}" == "yes" ]]; then
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v1.4/luci-app-poweroffdevice_1-4_all.ipk
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v1.4/luci-i18n-poweroffdevice-zh-cn_1-4_all.ipk
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v5.3.3-r4/v2ray-geoip_2025.03.08-r1_all.ipk
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v5.3.3-r4/v2ray-geosite_2025.03.08-r1_all.ipk
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v5.3.3-r4/v2dat_2022.12.15.47b8ee51-r2_x86_64.ipk
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v5.3.3-r4/mosdns_5.3.3-r4_x86_64.ipk
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v5.3.3-r4/luci-app-mosdns_1.6.10-r1_all.ipk
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v5.3.3-r4/luci-i18n-mosdns-zh-cn_25.061.23891.2523534_all.ipk
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/AdGuardHome_v0.107.57/luci-app-adguardhome_26.069.56331_9db3555_all.ipk
            # wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/26.069.56331/luci-app-ssr-plus_26.069.56331.9db3555_all.ipk
            # wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/25.3.2/luci-app-passwall2_25.3.2-r53_all.ipk
            wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v0.46.079/luci-app-openclash_0.46.079_all.ipk
            # wget https://dl.openwrt.ai/packages-24.10/x86_64/kiddin9/luci-app-poweroffdevice_26.057.44252~a27aeb1_all.ipk
            wget https://dl.openwrt.ai/packages-24.10/x86_64/kiddin9/luci-app-autotimeset_26.057.44252~a27aeb1_all.ipk
            # wget https://dl.openwrt.ai/packages-24.10/x86_64/kiddin9/quickstart_0.9.7-r8_x86_64.ipk
            # wget https://dl.openwrt.ai/packages-24.10/x86_64/kiddin9/luci-app-quickstart_26.057.44252~a27aeb1_all.ipk
          fi

      - name: Add AdGuardHome core
        run: |
          mkdir -p "${{ github.workspace }}/files/usr/bin"
          cd ${{ github.workspace }}/files/usr/bin
          wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/AdGuardHome_v0.107.57/AdGuardHome
          chmod +x AdGuardHome

      - name: Add OpenClash core
        run: |
          mkdir -p "${{ github.workspace }}/files/etc/openclash/core"
          cd ${{ github.workspace }}/files/etc/openclash/core
          wget https://github.com/liuweilhy/RunFilesBuilder/releases/download/v0.46.079/clash_meta
          chmod +x clash_meta

      - name: Build ImmortalWrt-x86-64-efi
        run: |
          partsize="${{ github.event.inputs.partsize }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          include_others="${{ github.event.inputs.include_others }}"
          enable_pppoe="${{ github.event.inputs.enable_pppoe }}"
          pppoe_account="${{ github.event.inputs.pppoe_account }}"
          pppoe_password="${{ github.event.inputs.pppoe_password }}"

          imagename=""
          if [[ "$include_docker" == "yes" ]]; then
            if [[ "$include_others" == "yes" ]]; then
              imagename="docker-plus"
            else
              imagename="docker"
            fi
          else
            if [[ "$include_others" == "yes" ]]; then
              imagename="plus"
            else
              imagename="lite"
            fi
          fi
          
          echo "Building ImmortalWrt-x86-64-efi"
          docker pull immortalwrt/imagebuilder:x86-64-openwrt-24.10.0
          docker run --rm -i \
            --user root \
            -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
            -v "${{ github.workspace }}/files:/home/build/immortalwrt/files" \
            -v "${{ github.workspace }}/packages:/home/build/immortalwrt/packages" \
            -v "${{ github.workspace }}/x86-64/imm.config:/home/build/immortalwrt/.config" \
            -v "${{ github.workspace }}/x86-64/24.10/build.sh:/home/build/immortalwrt/build.sh" \
            -e IMAGENAME=$imagename \
            -e PARTSIZE=$partsize \
            -e INCLUDE_DOCKER=$include_docker \
            -e INCLUDE_OTHERS=$include_others \
            -e ENABLE_PPPOE=$enable_pppoe \
            -e PPPOE_ACCOUNT=$pppoe_account \
            -e PPPOE_PASSWORD=$pppoe_password \
            immortalwrt/imagebuilder:x86-64-openwrt-24.10.0 /bin/bash /home/build/immortalwrt/build.sh

      - name: Generate Firmware SHA-256
        run: |
          cp ${{ github.workspace }}/bin/targets/x86/64/*squashfs-combined-efi.img.gz ${{ github.workspace }}
          for file in *squashfs-combined-efi.img.gz; do
            sha256sum "$file" > "$file.sha256"
            sha256sum -c "$file.sha256"
          done

      - name: Upload ImmortWrt as release assets
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: v1.0
          body_path: ${{ github.workspace }}/info.md
          files: |
            ${{ github.workspace }}/*squashfs-combined-efi.img.gz
            ${{ github.workspace }}/*.sha256
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
